!pip install -q transformers datasets timm torchvision

import torch
import torchvision
import timm
from transformers import ViTFeatureExtractor, ViTForImageClassification
from datasets import load_dataset

print("All libraries imported successfully!")



device = torch.device("cuda" if torch.cuda.is_available() else "cpu")
print(f"Using device: {device}")



from google.colab import files
files.upload()

!mkdir -p ~/.kaggle
!cp kaggle.json ~/.kaggle/
!chmod 600 ~/.kaggle/kaggle.json

!kaggle datasets download -d emmarex/plantdisease
!unzip -q plantdisease.zip -d plantvillage

import os
from torchvision import transforms
from torchvision.datasets import ImageFolder
from torch.utils.data import DataLoader, random_split
from PIL import Image

transform = transforms.Compose([
    transforms.Resize((224, 224)),
    transforms.ToTensor(),
    transforms.Normalize(mean=[0.485, 0.456, 0.406],
                         std=[0.229, 0.224, 0.225])
])


data_dir = 'plantvillage/PlantVillage'
dataset = ImageFolder(root=data_dir, transform=transform)

# Print class info
print(f"Number of classes: {len(dataset.classes)}")
print("Classes:", dataset.classes)


# Split into train/test (only use test part)
train_size = int(0.8 * len(dataset))
test_size = len(dataset) - train_size
_, test_dataset = random_split(dataset, [train_size, test_size])
test_loader = DataLoader(test_dataset, batch_size=32, shuffle=False)


# Load ViT model WITHOUT fine-tuning
model = ViTForImageClassification.from_pretrained(
    "google/vit-base-patch16-224-in21k",
    num_labels=len(dataset.classes)
)
model.to(device)
model.eval()

# Evaluation on test set
correct = 0
total = 0

with torch.no_grad():
    for imgs, labels in test_loader:
        imgs = imgs.to(device)
        labels = labels.to(device)
        outputs = model(imgs).logits
        _, preds = torch.max(outputs, dim=1)
        correct += torch.sum(preds == labels).item()
        total += labels.size(0)

test_accuracy = correct / total
print(f"\n‚ùå Test Accuracy WITHOUT Fine-Tuning: {test_accuracy:.4f}")
